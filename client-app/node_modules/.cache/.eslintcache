[{"/Users/tangerie/Coding/FileUploader/client-app/src/index.tsx":"1","/Users/tangerie/Coding/FileUploader/client-app/src/App.tsx":"2","/Users/tangerie/Coding/FileUploader/client-app/src/routes/UploadRoute.tsx":"3","/Users/tangerie/Coding/FileUploader/client-app/src/components/FileUpload.tsx":"4","/Users/tangerie/Coding/FileUploader/client-app/src/routes/DownloadRoute.tsx":"5","/Users/tangerie/Coding/FileUploader/client-app/src/routes/FinishedUploadRoute.tsx":"6"},{"size":421,"mtime":1625727043309,"results":"7","hashOfConfig":"8"},{"size":524,"mtime":1626054537683,"results":"9","hashOfConfig":"8"},{"size":2994,"mtime":1626055184908,"results":"10","hashOfConfig":"8"},{"size":2582,"mtime":1625735117441,"results":"11","hashOfConfig":"8"},{"size":1597,"mtime":1625803698280,"results":"12","hashOfConfig":"8"},{"size":900,"mtime":1626055598768,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"ecm9hs",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tangerie/Coding/FileUploader/client-app/src/index.tsx",[],["31","32"],"/Users/tangerie/Coding/FileUploader/client-app/src/App.tsx",["33"],"import React from 'react';\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\nimport DownloadRoute from './routes/DownloadRoute';\nimport FinishedUploadRoute from './routes/FinishedUploadRoute';\nimport UploadRoute from './routes/UploadRoute';\n\n\nfunction App() {\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<Route path=\"/\" exact component={UploadRoute} />\n\t\t\t<Route path=\"/uploaded/:id\" component={FinishedUploadRoute} />\n\t\t\t<Route path=\"/download/:id\" component={DownloadRoute}/>\n\t\t</BrowserRouter>\n\t);\n}\n\nexport default App;\n","/Users/tangerie/Coding/FileUploader/client-app/src/routes/UploadRoute.tsx",["34","35","36"],"import { useState } from \"react\";\nimport FileUpload from \"../components/FileUpload\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { useHistory } from \"react-router-dom\";\n\n\nexport default function UploadRoute() { \n    const [curFile, setCurFile] = useState<File | null>(null);\n    const [status, setStatus] = useState(\"\");\n\n    const history = useHistory();\n\n    const handleFileSet = (file : File | null) => {\n        console.log(file);\n        setCurFile(file);\n    }\n\n    const submitUpload = async () => {\n        if(!curFile) return;\n\n        const formData = new FormData();\n        formData.append(\"formFile\", curFile);\n        formData.append(\"fileName\", curFile.name);\n\n        try {\n            setStatus(\"uploading\");\n            fetch(\"/file/upload\", {\n                method: \"POST\",\n                body: formData\n            }).then(res => res.text())\n            .then(txt => {\n                setStatus(\"done\");\n                history.push(\"/uploaded/\" + txt);\n            })\n            .catch(err => {\n                setStatus(\"error\");\n                console.error(err);\n            });\n\n        } catch(ex) {\n            console.log(ex);\n        }      \n    }\n\n    if(status == \"uploading\") {\n        return <div className=\"bg-gray-900 min-h-screen flex flex-col justify-center\">\n            <div className=\"bg-gray-700 px-10 py-10 mx-auto text-center rounded\">\n                <h1 className=\"text-5xl text-white font-extralight mb-12\">Uploading...</h1>\n                \n                <ClipLoader color=\"#ffffff\" loading={true} size={96}/>\n            </div>\n        </div>;\n    }\n\n    if(status == \"error\") {\n        return <div className=\"bg-gray-900 min-h-screen flex flex-col justify-center\">\n            <div className=\"bg-gray-700 px-10 py-10 mx-auto text-center rounded\">\n                <h1 className=\"text-5xl text-white font-extralight mb-12\">There was an error uploading</h1>\n                \n                <button className=\"text-white text-lg bg-gray-500 px-6 py-3 mt-8 rounded\" onClick={() => {\n                    window.location.reload();\n                }}>Try Again</button>\n            </div>\n        </div>;\n    }\n\n    return <div className=\"bg-gray-900 min-h-screen flex flex-col justify-center\">\n        <div className=\"bg-gray-700 px-10 py-10 mx-auto text-center rounded\">\n            <h1 className=\"text-5xl text-white font-extralight mb-3\">Drop here to upload</h1>\n            <h3 className=\"text-2xl text-gray-400 mb-10 font-light\">or click to select a file...</h3>\n\n            <div className=\"w-full h-64 border-4 border-gray-500 bg-gray-600 rounded-md\">\n                <FileUpload handleFileUpload={handleFileSet}/>\n            </div>\n\n            {\n                curFile == null ? null : <button onClick={submitUpload} className=\"text-white text-lg bg-gray-500 px-6 py-3 mt-8 rounded\">Upload File</button>\n            }\n            \n        </div>\n    </div>;\n}","/Users/tangerie/Coding/FileUploader/client-app/src/components/FileUpload.tsx",["37"],"import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useState } from \"react\";\nimport prettyBytes from \"pretty-bytes\";\n\ninterface Props {\n    handleFileUpload : (file : File | null) => void;\n}\n\nexport default function FileUpload(props : Props) {\n    const [curFile, setCurFile] = useState<File | null>(null);\n    const [dragging, setDragging] = useState<boolean>(false);\n    const [dragCounter, setDragCounter] = useState(0);\n    \n    const onFormClick = () => {\n        document.getElementById(\"fileUploadInput\")?.click();\n    }\n\n    return <div className=\"w-full h-full flex flex-col justify-center group cursor-pointer rounded\" onClick={onFormClick} \n    onDragEnter={e => {\n        e.preventDefault();\n        e.stopPropagation();\n        setDragCounter(dragCounter + 1);\n        if(e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n            setDragging(true);\n        }\n    }}\n    \n    onDragLeave={e => {\n        e.preventDefault();\n        e.stopPropagation();\n        setDragCounter(dragCounter - 1);\n        if (dragCounter > 0) return\n        setDragging(false);\n    }}\n    \n    onDragOver={e => {\n        e.preventDefault();\n        e.stopPropagation();\n    }}\n    \n    onDrop={e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        setDragging(false);\n        if(e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n            setCurFile(e.dataTransfer.files[0]);\n            props.handleFileUpload(e.dataTransfer.files[0]);\n            //e.dataTransfer.clearData();\n            setDragCounter(0);\n        }\n    }}>\n        <form className=\"hidden\">\n            <input type=\"file\" id=\"fileUploadInput\" onChange={(event) => {\n                if(event.target.files != null && event.target.files.length > 0) {\n                    props.handleFileUpload(event.target.files[0]);\n                    setCurFile(event.target.files[0]);\n                } else {\n                    props.handleFileUpload(null);\n                    setCurFile(null);\n                }\n            }}></input>\n        </form>\n        <FontAwesomeIcon icon={curFile == null ? \"file-upload\" : \"archive\"} className=\"mx-auto text-white opacity-50 text-4xl group-hover:opacity-80 transition-opacity ease-in-out\" />\n        {\n            curFile == null ? null : <p className=\"px-6 text-center mx-auto mt-4 text-white opacity-50 text-xl group-hover:opacity-80 transition-opacity ease-in-out\">\n                {curFile.name}<br/> <span className=\"text-gray-300 text-lg\">{prettyBytes(curFile.size)}</span>\n            </p>\n        }\n    </div>;\n}","/Users/tangerie/Coding/FileUploader/client-app/src/routes/DownloadRoute.tsx",["38"],"import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\ninterface DownloadParams {\n    id : string;\n}\n\nexport default function DownloadRoute() {\n    const [name, setName] = useState<null | string>(null);\n\n    const { id } = useParams<DownloadParams>();\n\n    useEffect(() => {\n        const getData = async () => {\n            const res = await fetch(\"/file/info/\" + id);\n            try {\n                const json = await res.json();\n                setName(json[\"name\"]);\n            } catch(err) {\n                console.log(\"No File\");\n            }\n        }\n\n        getData();\n    }, []);\n\n    if(name == null) {\n        return <div className=\"bg-gray-900 min-h-screen flex flex-col justify-center\">\n            <div className=\"bg-gray-700 px-10 py-10 mx-auto text-center rounded\">\n                <h3 className=\"text-2xl text-gray-400 mb-10 font-light\">No File Found</h3>\n            </div>\n        </div>;\n    }\n\n    return <div className=\"bg-gray-900 min-h-screen flex flex-col justify-center\">\n            <div className=\"bg-gray-700 px-10 py-10 mx-auto text-center rounded\">\n                <h3 className=\"text-2xl text-gray-400 mb-10 font-light\">Download File</h3>\n                \n                <button className=\"text-white text-lg bg-gray-500 px-6 py-3 mt-8 rounded\" onClick={() => {\n                    window.location.href = \"/file/download/\" + id;\n                }}>{name} <FontAwesomeIcon icon=\"download\" className=\"ml-4\"/> </button>\n            </div>\n        </div>;\n}","/Users/tangerie/Coding/FileUploader/client-app/src/routes/FinishedUploadRoute.tsx",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":2,"column":32,"nodeType":"45","messageId":"46","endLine":2,"endColumn":36},{"ruleId":"43","severity":1,"message":"47","line":4,"column":10,"nodeType":"45","messageId":"46","endLine":4,"endColumn":25},{"ruleId":"48","severity":1,"message":"49","line":46,"column":15,"nodeType":"50","messageId":"51","endLine":46,"endColumn":17},{"ruleId":"48","severity":1,"message":"49","line":56,"column":15,"nodeType":"50","messageId":"51","endLine":56,"endColumn":17},{"ruleId":"43","severity":1,"message":"52","line":11,"column":12,"nodeType":"45","messageId":"46","endLine":11,"endColumn":20},{"ruleId":"53","severity":1,"message":"54","line":26,"column":8,"nodeType":"55","endLine":26,"endColumn":10,"suggestions":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'CopyToClipboard' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'dragging' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["59"],"no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},"Update the dependencies array to be: [id]",{"range":"62","text":"63"},[695,697],"[id]"]